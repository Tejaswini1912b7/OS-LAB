FCFS:
Introduction:
	First Come, First Served (FCFS) also known as First In, First Out(FIFO) is the CPU scheduling algorithm in which the CPU is allocated to the processes in the order they are queued in the ready queue.
	FCFS follows non-preemptive scheduling which mean once the CPU is allocated to a process it does not leave the CPU until the process will not get terminated or may get halted due to some I/O interrupt.

Algorithm:
1. Input the processes along with their burst time (bt).
2. Find waiting time (wt) for all processes.
3. As first process that comes need not to wait so waiting time for process 1 will be 0 
i.e. wt[0] = 0.
4. Find waiting time for all other processes i.e. for process i -> wt[i] = bt[i-1] + wt[i-1] .
5. Find turnaround time = waiting_time + burst_time for all processes.
6. Find average waiting time = total_waiting_time / no_of_processes.
7. Similarly, find average turnaround time = total_turn_around_time / no_of_processes.

Code:
// FCFS - FIRST COME FIRST SERVED 
#include<stdio.h>
int main()
{
    int i, n;  
    float avg_waiting = 0, avg_finishing = 0;
    printf("Enter the number of Processes(max 10) :     ");
    scanf("%d", &n);
    int waiting[10] = {0}, process[n], finishing[n]; 
    printf("Enter the time required for %d processes : \n\n", n);
    for(i = 0; i < n; i++)
    {
        printf("Time required for Process %d : ", i + 1);
        scanf("%d", &process[i]);
    }
    printf("\n---------------------------------------------------------------------------------\n");
    for(i = 1; i < n; i++)
    {
        waiting[i] = process[i - 1] + waiting[i - 1];
    }
    for(i = 0; i < n; i++)
    {
        finishing[i] = process[i] + waiting[i];
    }
    for(i = 0; i < n; i++)
    {
        avg_waiting += waiting[i];
    }
    avg_waiting = avg_waiting / n;
    for(i = 0; i < n; i++)
    {
        avg_finishing += finishing[i];
    }
    avg_finishing = avg_finishing / n;
    
    printf("           PROCESS TIME,   WAITING TIME,  FINISHING TIME       for %d processes are : \n", n);
    printf("           (or)BURST TIME                (or)TURNAROUND TIME \n");
    
    for(i = 0; i < n; i++)
    {
        printf("Process %d : %7d%14d%14d\n", i + 1, process[i], waiting[i], finishing[i]);
    }
    
    printf("\n-------------------------------------------------------------------------------\n\n");
    printf("AVERAGE WAITING TIME  : %.2f\n", avg_waiting);
    printf("AVERAGE FINISHING TIME : %.2f", avg_finishing);
    return 0;
}

OUTPUT :

